angular.module("angular.flux",[]).factory("Dispatcher",function(){function i(){this._callbacks={},this._isPending={},this._isHandled={},this._isDispatching=!1,this._pendingPayload=null}var t=1,n="ID_",a=!0,s=function(i,t,n,s,e,r,o,c){if(a&&void 0===t)throw new Error("invariant requires an error message argument");if(!i){var h;if(void 0===t)h=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,s,e,r,o,c],p=0;h=new Error("Invariant Violation: "+t.replace(/%s/g,function(){return l[p++]}))}throw h.framesToPop=1,h}};return i.prototype.register=function(i){var a=n+t++;return this._callbacks[a]=i,a},i.prototype.unregister=function(i){s(this._callbacks[i],"Dispatcher.unregister(...): `%s` does not map to a registered callback.",i),delete this._callbacks[i]},i.prototype.waitFor=function(i){s(this._isDispatching,"Dispatcher.waitFor(...): Must be invoked while dispatching.");for(var t=0;t<i.length;t++){var n=i[t];this._isPending[n]?s(this._isHandled[n],"Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.",n):(s(this._callbacks[n],"Dispatcher.waitFor(...): `%s` does not map to a registered callback.",n),this._invokeCallback(n))}},i.prototype.dispatch=function(i){s(!this._isDispatching,"Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch."),this._startDispatching(i);try{for(var t in this._callbacks)this._isPending[t]||this._invokeCallback(t)}finally{this._stopDispatching()}},i.prototype.isDispatching=function(){return this._isDispatching},i.prototype._invokeCallback=function(i){this._isPending[i]=!0,this._callbacks[i](this._pendingPayload),this._isHandled[i]=!0},i.prototype._startDispatching=function(i){for(var t in this._callbacks)this._isPending[t]=!1,this._isHandled[t]=!1;this._pendingPayload=i,this._isDispatching=!0},i.prototype._stopDispatching=function(){this._pendingPayload=null,this._isDispatching=!1},i});